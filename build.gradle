plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.2.30'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.2.30'
    id "org.jetbrains.kotlin.plugin.noarg" version "1.2.30"
    id 'org.springframework.boot' version '2.0.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.4.RELEASE'
    //id 'com.github.sherter.google-java-format' version '0.6'
    id 'war'
}

group = 'com.yoloo.server'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
}

configurations {
    providedRuntime
}

ext {
    springCloudVersion = 'Finchley.M8'
}

noArg {
    annotation("com.yoloo.server.core.util.NoArg")
}

configurations.all {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    exclude group: 'org.slf4j', module: 'jul-to-slf4j'
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}

dependencies {
    // App Engine
    implementation 'com.google.appengine:appengine-api-1.0-sdk:+'

    implementation 'com.googlecode.objectify:objectify:5.1.22'

    compileOnly 'javax.servlet:javax.servlet-api:3.1.0'

    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    //implementation 'org.springframework.cloud:spring-cloud-starter-oauth2'

    // Kotlin
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jre8'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.21'

    implementation 'com.google.guava:guava:24.1-jre'

    //providedCompile 'org.springframework.boot:spring-boot-starter-tomcat'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
